<?xml version="1.0"?>
<robot name="krytn" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:property name="wheel_r" value="0.1" />
  <xacro:property name="wheel_xpos" value="0.11" />
  <xacro:include filename="$(find krytn_cafe)/models/krytn/inertial.xacro" />

  <xacro:arg name="use_nominal_extrinsics" default="false" />
  <xacro:include filename="$(find realsense2_description)/urdf/_d435i.urdf.xacro"/>
  <xacro:macro name="low_friction">
              <mu>0.1</mu>
              <mu1>0.1</mu1> 
              <mu2>0.1</mu2>
              <slip1>0</slip1>
              <slip2>0</slip2>
  </xacro:macro>


  <xacro:macro name="high_friction">
                <mu>0.5</mu>
                <mu1>0.5</mu1> 
                <mu2>0.5</mu2>
                <minDepth>0.005</minDepth>
                <kp>1e8</kp>
        
  </xacro:macro>


 <link name="base_footprint"/>
  <joint name="base_footprint_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0 0 ${wheel_r}" rpy="0 0 0"/>
  </joint>
  <!-- Base Link -->
  <link name="base_link">
    <origin xyz="-0.25 0 ${0.03}" rpy="0 0 0" />  

    <visual>
      <origin xyz="${-wheel_xpos} 0 ${-wheel_r+0.071}" rpy="0 0 0" />
      <geometry>
        <mesh filename="$(find krytn_cafe)/models/krytn/meshes/magni_body.dae" />
      </geometry>
    </visual>
       
    <collision>
	    <origin xyz="${-wheel_xpos} 0 ${-wheel_r+0.151}" rpy="0 0 0" />
      <geometry>
        <box size="0.398 0.268 0.160"/>
      </geometry>
    </collision>
  
    <collision>
      <origin xyz="${-wheel_xpos-0.026} 0 ${-wheel_r+0.248}" rpy="0 0 0" />
      <geometry>
        <box size="0.375 0.268 0.034"/>
      </geometry>

    </collision>
  
    <collision>
      <origin xyz="${-wheel_xpos-0.169} 0.169 ${-wheel_r+0.106}" rpy="0 0 0" />
      <geometry>
        <box size="0.1 0.07 0.07"/>
      </geometry>
    </collision>
  
    <collision>
      <origin xyz="${-wheel_xpos-0.169} -0.169 ${-wheel_r+0.106}" rpy="0 0 0" />
      <geometry>
        <box size="0.1 0.07 0.07"/>
      </geometry>
    </collision>

    
    <xacro:box_inertial_with_origin  x="0.398" y="0.221" z="0.150" mass="10.0">
      <origin xyz="-0.15 0 0.03" rpy="0 0 0" /> 
    </xacro:box_inertial_with_origin>

  </link>



 <!-- Macro for defining wheels -->
  <xacro:macro name="wheel" params="prefix reflect">
    <link name="${prefix}_wheel">
           
      <collision>
        <origin xyz="${0.033*reflect} 0 0" rpy="0 ${pi/2} 0" />
        <geometry>
          <cylinder radius="${wheel_r}" length="0.01"/>
        </geometry>
      </collision>
   

      <visual>
        <origin xyz="${-0.071*reflect} 0 0" rpy="0 ${(reflect-1)*pi/2} 0" />
        <geometry>
          <mesh filename="$(find krytn_cafe)/models/krytn/meshes/front_wheel.dae" />
        </geometry>
      </visual>


      <xacro:cylinder_inertial_with_origin radius="${wheel_r}" length="0.05" mass="1.34">
        <origin xyz="0 0 0" rpy="0 ${pi/2} 0" />
      </xacro:cylinder_inertial_with_origin>
    </link>

    

    <joint name="${prefix}_wheel_joint" type="continuous">
      <axis xyz="1 0 0" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="${prefix}_wheel"/>
      <origin xyz="0 ${0.163*reflect} 0" rpy="0 0 ${pi/2}"/>
      <dynamics damping="0.2" friction="0.8"/>
      
      
    </joint>

   

  </xacro:macro>

  <!--- create wheels -->
  <xacro:wheel prefix="left" reflect="1"/>
  <xacro:wheel prefix="right" reflect="-1"/>


  <!-- Macro for defining caster wheels -->
  <xacro:macro name="caster_wheel" params="prefix reflect">
    <link name="${prefix}_caster_wheel">
      <origin xyz="-0.37 ${reflect*0.169} ${-wheel_r+0.04}" rpy="0 0 0" />
      <collision>
        <origin xyz="-0.27 ${reflect*0.169} ${-wheel_r+0.04}" rpy="0 0 0" />
        <geometry>
          <sphere radius="0.04"/>
        </geometry>        
       
      </collision>
      <visual>
        <origin xyz="-0.25 ${reflect*0.169} 0" rpy="0 0 ${pi}" />

        <geometry>
          <mesh filename="$(find krytn_cafe)/models/krytn/meshes/caster_wheel.dae" />
        </geometry>
      </visual>

      <!-- removing inertia of caster wheels so that base inertial is not tilted. 
      <xacro:cylinder_inertial_with_origin radius="${wheel_r}" length="0.05" mass="3.34">
          <origin xyz="0 0 0" rpy="0 ${pi/2} 0" />
       </xacro:cylinder_inertial_with_origin> 
       -->
    </link>



    <joint name="${prefix}_caster_wheel_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${prefix}_caster_wheel"/>
       
    </joint>




  </xacro:macro>

    <!-- and caster wheels )-->
  <xacro:caster_wheel prefix="left" reflect="1"/>
  <xacro:caster_wheel prefix="right" reflect="-1"/>


<!-- add a laser -->
  <link name="laser_link">
    <visual name="visual">
      <geometry>
          <cylinder length="0.05" radius="0.05"/>
       </geometry>
    </visual>
    <collision>
      <geometry>
         <cylinder length="0.05" radius="0.05"/>
      </geometry>
    </collision>
   
  </link>

  <joint name="laser_link_joint" type="fixed">
    <parent link="base_link"/>
    <child link="laser_link"/>
    <origin rpy="0 0 0" xyz="-0.093 0 0.198"/>

  </joint>
  
<!-- add a realsense -->

<xacro:sensor_d435i parent="base_link" use_nominal_extrinsics="$(arg use_nominal_extrinsics)">
   <origin rpy="0 0 0" xyz="0 0 0.6"/>
</xacro:sensor_d435i>

<!-- Setup motor control -->
    <ros2_control name="magni" type="system">

      <hardware>        
          <plugin>ubiquity_motor/UbiquityMotorSystemHardware</plugin>
          <param name="serial_port">/dev/serial0</param>
          <!-- <param name="serial_port">/dev/ttyUSB1</param> -->
          <!-- <param name="serial_port">/dev/ttyUSB2</param> -->
          <param name="baud_rate">38400</param>
          <param name="left_wheel_joint_name">left_wheel_joint</param>
          <param name="right_wheel_joint_name">right_wheel_joint</param>
      </hardware>

      <joint name="left_wheel_joint">


        <command_interface name="velocity">
          <param name="min">-1</param>
          <param name="max">1</param>
        </command_interface>

        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>

      <joint name="right_wheel_joint">


        <command_interface name="velocity">
          <param name="min">-1</param>
          <param name="max">1</param>
        </command_interface>

        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>

       <gpio name="magni_IOs">
        <state_interface name="battery_voltage"/>
      </gpio> 
    </ros2_control>

</robot>
